import psycopg2

hostname = 'localhost'
database = 'postgres'
username = 'postgres'
pwd = 'Affu@1234567890'
port_id = '5433'
con = None
cur = None

#we are builing connection
con = psycopg2.connect(
    host = hostname,
    dbname = database,
    user = username,
    password = pwd,
    port = port_id
)
cur = con.cursor()

# creating product table

cur.execute('DROP TABLE IF EXISTS Product CASCADE')

create_script_prod = ''' CREATE TABLE  IF NOT EXISTS Product (
                    prod    varchar(30) PRIMARY KEY,
                    pname   varchar(100),
                    price   decimal(5,2) )'''

cur.execute(create_script_prod)

insert_script_prod = 'INSERT INTO Product (prod, pname, price) VALUES (%s,%s,%s)'
insert_values_prod = [ ('p1','tape',2.5),('p2','tv',250),('p3','vcr',80)]
for record_values_prod in insert_values_prod:
    cur.execute(insert_script_prod,record_values_prod)

#creating department table
cur.execute('DROP TABLE IF EXISTS Depot CASCADE')

create_script_dep = ''' CREATE TABLE  IF NOT EXISTS Depot (
                    dep   varchar(30) PRIMARY KEY,
                    addr   varchar(100),
                    volume   int )'''

cur.execute(create_script_dep)


insert_script_dep = 'INSERT INTO Depot (dep, addr, volume) VALUES (%s,%s,%s)'
insert_values_dep = [ ('d1','New York',9000),('d2','Syracuse',6000),('d4','New York',2000)]
for record_values_dep in insert_values_dep:
    cur.execute(insert_script_dep,record_values_dep)


#creating stock table
cur.execute('DROP TABLE IF EXISTS Stock CASCADE')

create_script_stock = ''' CREATE TABLE  IF NOT EXISTS Stock (
                    prod        varchar(30),
                    dep         varchar(30),
                    quantity    int)
                    '''
                
create_script_alter_stock1 = ''' ALTER TABLE Stock ADD CONSTRAINT fk_prod FOREIGN KEY(prod) REFERENCES Product(prod) ON DELETE CASCADE ON UPDATE CASCADE'''
create_script_alter_stock2 = ''' ALTER TABLE Stock ADD CONSTRAINT fk_dep FOREIGN KEY(dep) REFERENCES Depot(dep) ON DELETE CASCADE ON UPDATE CASCADE'''
create_script_alter_stock3 = ''' ALTER TABLE Stock ADD CONSTRAINT pk_dep PRIMARY KEY(prod,dep)'''


cur.execute(create_script_stock)
cur.execute(create_script_alter_stock1)
cur.execute(create_script_alter_stock2)
cur.execute(create_script_alter_stock3)


insert_script_stock = 'INSERT INTO Stock (prod, dep, quantity) VALUES (%s,%s,%s)'
insert_values_stock = [ ('p1','d1',1000),('p1','d2',-100),('p1','d4',1200),
('p3','d1',3000),('p3','d4',2000),('p2','d4',1500),('p2','d1',-400),('p2','d2',2000)]
for record_values_stock in insert_values_stock:
    cur.execute(insert_script_stock,record_values_stock)


update_script = ''' UPDATE Product  SET prod = 'pp1' WHERE prod = 'p1' '''
#update_script_rev = ''' UPDATE Product  SET prod = 'p1' WHERE prod = 'pp1' '''

cur.execute(update_script)
#cur.execute(update_script_rev)





con.commit()


if cur is not None :
    cur.close()
if con is not None :
    con.close()
print ( "Code run Successfully")
